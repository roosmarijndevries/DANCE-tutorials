Learn to DANCE!Coding the HumanitiesSarah Hazm en Roosmarijn de Vries10821805 en 10541918Final AssigmentMarijn Koolen16-12-20151502 words Learn to DANCE!Project description‘Learn to DANCE!’ is a platform for people who are eager to learn different dance styles within the reach of a single mouse click. The application provides the user with useful tutorials for currently nine different dance styles (Zumba, Salsa, Ballet, Bellydancing, Tap, Breakdance, HipHop, Jazz, Modern/Contemporary). And the great thing is, we’ve got tutorials for every level of expertise. Starting as a beginner, gliding through the intermediate-level, the user will finally reach the level of an advanced dancer. The progress the user makes, is being captured in means of the progress-bar. This bar changes color (from red to green) with each level of experience the user finishes. This keeps the user motivated through their process and adds an element of competition to the experience overall. The tutorials are manually selected from YouTube into a playlist to guarantee the relevance and the high profession quality of learning. We use the Iframe API to show the tutorial on the website. Another thing we’ve added to our application, is the possibility for users to create a community on Facebook. Within this option,  they can share their thoughts and experiences with other enthusiasts. The like and share button of Facebook is also implemented onto the bottom of the website. We also added the option for users to give us feedback on the application, or letting us know what other dance styles they would like to learn. We’ve decided on a simple, but energetic look for our website. The design is supposed to be self explanatory and should not be confusing for the user. On the pages for the specific dance styles, we’ve added a tooltip, the question mark in the right corner, that can explain how it works if users still got questions.  Some photos of our application:Main IdeasOur initial idea was slightly different from the ‘Learn to DANCE!’ app we’ve finally created. We first wanted to work with the TED-API and create a video-platform where users could easily find appropriate TED-talk videos that fit within the academic field they are working/studying in. But, when we asked TED for a key to use the API, we received a message that the API was taken down for the moment. We were not sure when this problem would be taken care of, and because the TED-API was brand new, we just did not trust it. So we decided to do something different. We sticked to the idea of creating a video platform, but chose to do this within another field of humanities: dance. Dance is part of the Performing Arts Humanities and is also something that we both really love to do in our spare time. The idea of making a collection of dance tutorial, came from an inconvenience we’ve experienced ourselves on YouTube. When searching for example ‘Breakdance tutorial’, it is very difficult to see which search result is representative for your own level of expertise. Also, some tutorials are more than ten years old, and are pretty out-dated. And on top of that, there are a lot of ‘joke’-tutorials on the Internet, that just don’t give you the information that you need. ‘This could be a lot easier’, we thought, and we created our plan for ‘Learn to DANCE!’. This project is also perfectly expandable to more humanities-skills that people can learn by watching tutorials. A few of our ideas include ‘Learn to DRAW!’, ‘Learn to PAINT!’, ‘Learn to COMMUNICATE!’ (learning different languages), and of course ‘Learn to CODE!’. These projects would have the same 5-level base as ‘Learn to DANCE!’, to guide the user through different levels of experience. We think the look of the app is very important, and this is something we’ve started brainstorming about very soon in the project. The first sketches of the app, are eventually a lot like our final project. We managed to get the silhouettes of the dancers in the homepage, and the layout of the sketches corresponds a lot to our website.  Project PlanThe project plan was strictly being followed which resulted in a good teamwork with a clear goal in mind. The first session we teamed up, we’ve made an elaborate scheme to get us to our goal of creating this app. Before we started working on our project, we both did the YouTube-tutorial and the Git-tutorial on Codecademy, and we’ve looked into the description of the YouTube API. After that, the steps and deadlines which we agreed on from the beginning were the following:1.	Making the repository where we can both share files in.2.	Creating the Homepage in HTML.3.	Add Javascript to the Homepage by adding buttons of every dance style and making these buttons link to a new page for every specific dance style. 4.	Creating the HTML for one specific dance style page (which we could later on copy on the the other eight dance styles).5.	Add the API and the iframe on the specific dance style page. Get a video working in there.6.	Adding buttons for ‘next’, ‘previous’, ‘pause’ and ‘play’ on the specific dance style page, and correspond these buttons the the functions of the iframe.7.	Make sure the text ‘beginner’, ‘beginner +’, ‘intermediate’, ‘intermediate +’ and ‘advanced’ change with every mouse click on the ‘next’ and ‘previous’ buttons. 8.	Make sure the user can go ‘back to the homepage’9.	In the homepage, make an ‘About’ button, and a corresponding page that tells the user something about our project10.	Coding the CSS of the Homepage11.	Coding the CSS of the specific page12.	Create 8 more HTML and CSS files and copy the HTML and CSS files of the single specific dance style page onto the other eight dance style pages. Implement small changes like the title for the specific dance style, and the video ID in the API. We decided to include the SCRIPT within the HTML-files. This was a rational choice, because we soon had sixteen files for only the CSS and HTML of every specific dance-style. Adding separate JAVA-files would add this up by another eight files, and we wanted to keep the structure in Koding. Along this step-by-step plan, we decided on a few deadlines:Date	Homework before the lesson	In the lesson26/11	YouTube and Git Tutorial, API	Step 1 and 21/12	Getting started on step 3-8	Working together on step 3-83/12	Working on step 3-8	Finishing step 3-8 together8/12	Making CSS moodboard + start CSS	Working together on CSS10/12	Finishing CSS + rehearse presentation 	Presentation, finish website17/12	Making the report	Official deadlineProgressAlong the way, we did step 3-8 a lot faster than we’ve initially planned. So we spent a lot more time on perfecting the CSS and making the app look even more beautiful. We’ve also added some features that we did not thought of when making our initial plan, like the Facebook-buttons, the ?-Tooltip, the progress-bar and the feedback-options. All the steps we’ve initially created, are finished. We chose to not set up steps that are too big, because we had no idea how much time the small steps would take. We did this on purpose, so we would have more room to expand the app, after we finished the basis. We’ve completed all the steps we initially decided on, plus some extra work.Something that we would have worked on if we had had more time, would be creating some sort of code that makes the selection of videos automatically. In this project, we chose to do this manually, but it would have been great to find a search key that gives us the same (or maybe even better) results in the selection of video tutorials. ReflectionBy coding this application, we’ve learned a lot of useful programming skills. Working with the YouTube API is a great training for using pre-programmed functions by importing this through an API. The challenging part of using pre-programmed functions, was making this personal so it does not look like it is all pre-programmed. We were able to design our own buttons to get to this goal, and provide our site with a personal look.Considering teamwork, we were both really content with the way we were working together. Because there were only two of us, dividing tasks was relatively easy and we were on the same page regarding the idea behind our site, and the look we were going for. Within the course 'Coding the Digital Humanities’, we've learned how to program and develop your own website based on an API database. Tutorials for Javascript, CSS, using an API and HTML were all very useful to get our hands on our ‘Learn to Dance'-project. We had no previous experience in programming with these languages before this course. Now we can certainly state to understand the basis of these programming languages. 